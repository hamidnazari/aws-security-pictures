#!/bin/bash
##################################################################
# Shortcutter
##################################################################
set -e

usage() {
    echo "usage: $0 [-v] [-b] [-q] [-l ELBNAME] [-e EC2ID] [-r RDSID] [-p PROFILE] [-t TITLE]"
}

execute() {
    if [ $VERBOSE ]; then
        echo "executing: $@" 1>&2
        $@
    else
        $@ 1>/dev/null 2>/dev/null
    fi
}

OUTPUT=""

# current dir
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

while getopts 'qhvbp:e:l:r:t:' flag; do
    case $flag in
        v) VERBOSE='-v';;
        b) BYPASS_CACHE='-b';;
        p) PROFILE="--profile $OPTARG";;
        l) ELB="--elb $OPTARG"; OUTPUT=$OPTARG;;
        e) EC2="--ec2 $OPTARG"; OUTPUT=$OPTARG;;
        r) RDS="--rds $OPTARG";;
        t) TITLE="--title $OPTARG";;
        q) exec 1>/dev/null 2>/dev/null;;
        h|help) usage; exit 0;;
        *) usage; exit 64;;
    esac
done

if [[ -n $OUTPUT ]]; then
    execute $DIR/awssecuritypictures/generate.py $VERBOSE $BYPASS_CACHE $ELB $EC2 $RDS $PROFILE $TITLE -o $OUTPUT.dot
    execute dot -T png $OUTPUT.dot -o $OUTPUT.png $VERBOSE

    if type 1>/dev/null 2>/dev/null eog; then
        execute eog $OUTPUT.png
    elif type 1>/dev/null 2>/dev/null open; then
        execute open $OUTPUT.png
    fi
else
    execute $DIR/awssecuritypictures/generate.py $VERBOSE $BYPASS_CACHE $ELB $EC2 $RDS $PROFILE $TITLE
fi
